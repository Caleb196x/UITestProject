// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: ue.capnp

#include "ue.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<74> b_f073e869a6974458 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     88,  68, 151, 166, 105, 232, 115, 240,
      9,   0,   0,   0,   3,   0,   0,   0,
     45, 146,   1, 114, 148, 138,  76, 252,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   0,   0,   0,
     25,   0,   0,   0,  71,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,   7,   1,   0,   0,
    249,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,   0,
     16,   0,   0,   0,   1,   0,   1,   0,
     31, 169, 175, 202, 191, 189, 246, 159,
     25,   0,   0,   0,  66,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
     21,   0,   0,   0,  58,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
     17,   0,   0,   0,  50,   0,   0,   0,
    224, 165,  98,  60,  93,  52,  20, 143,
     13,   0,   0,   0,  74,   0,   0,   0,
     80, 111, 105, 110, 116, 101, 114,   0,
     79,  98, 106, 101,  99, 116,   0,   0,
     67, 108,  97, 115, 115,   0,   0,   0,
     77, 121,  79,  98, 106, 101,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    157, 125, 225,  65, 172, 184,  84, 135,
    100,  73,  32,  11,  12, 139,  17, 174,
    113,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    149,  24, 136,  98, 105, 128, 160, 252,
    145, 186, 113, 254, 247, 234, 104, 253,
     93,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     85,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     53, 103, 110,  82, 100, 106, 237, 173,
    205, 131, 194, 211,  76, 178, 126, 236,
     73,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     65,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    136,  94, 187,  42,  81, 211, 209, 177,
     38, 213,  91, 184, 137,  71,   8, 159,
     53,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,   7,   0,   0,   0,
    110, 101, 119,  85,  69,  79,  98, 106,
    101,  99, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 114, 101,  97, 116, 101,  77, 121,
     79,  98, 106, 101,  99, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 114, 101,  97, 116, 101,  67, 108,
     97, 115, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 114, 101,  97, 116, 101,  79,  98,
    106, 101,  99, 116,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f073e869a6974458 = b_f073e869a6974458.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f073e869a6974458[] = {
  &s_8754b8ac41e17d9d,
  &s_9f084789b85bd526,
  &s_aded6a64526e6735,
  &s_ae118b0c0b204964,
  &s_b1d1d3512abb5e88,
  &s_ec7eb24cd3c283cd,
  &s_fca0806962881895,
  &s_fd68eaf7fe71ba91,
};
static const uint16_t m_f073e869a6974458[] = {2, 1, 3, 0};
const ::capnp::_::RawSchema s_f073e869a6974458 = {
  0xf073e869a6974458, b_f073e869a6974458.words, 74, d_f073e869a6974458, m_f073e869a6974458,
  8, 4, nullptr, nullptr, nullptr, { &s_f073e869a6974458, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_9ff6bdbfcaafa91f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     31, 169, 175, 202, 191, 189, 246, 159,
     16,   0,   0,   0,   1,   0,   1,   0,
     88,  68, 151, 166, 105, 232, 115, 240,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     80, 111, 105, 110, 116, 101, 114,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     97, 100, 100, 114,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9ff6bdbfcaafa91f = b_9ff6bdbfcaafa91f.words;
#if !CAPNP_LITE
static const uint16_t m_9ff6bdbfcaafa91f[] = {0};
static const uint16_t i_9ff6bdbfcaafa91f[] = {0};
const ::capnp::_::RawSchema s_9ff6bdbfcaafa91f = {
  0x9ff6bdbfcaafa91f, b_9ff6bdbfcaafa91f.words, 32, nullptr, m_9ff6bdbfcaafa91f,
  0, 1, i_9ff6bdbfcaafa91f, nullptr, nullptr, { &s_9ff6bdbfcaafa91f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<197> b_f8804e550c52fd12 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
     16,   0,   0,   0,   3,   0,   0,   0,
     88,  68, 151, 166, 105, 232, 115, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,   7,   4,   0,   0,
    229,   2,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     59,  18, 150, 242,  24, 215,  44, 210,
      1,   0,   0,   0,  90,   0,   0,   0,
     80, 114, 111, 112, 101, 114, 116, 105,
    101, 115,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    159, 254, 202,  57, 212, 143, 171, 231,
     23, 160,  43,  51,  58,  39, 154, 145,
    241,   1,   0,   0, 170,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   1,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    216,  33, 142, 237,  53, 170,  33, 194,
    253,  58,  66, 154,   2, 201,   6, 130,
    225,   1,   0,   0, 186,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    221,   1,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    151,   1, 236, 178, 146, 254, 149, 156,
    121, 133, 220, 103, 217, 210, 152, 231,
    209,   1,   0,   0, 138,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    205,   1,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    144,  10, 183, 159, 135, 246,  40, 178,
     42, 115, 170, 202, 155, 134,  30, 162,
    193,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   1,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
     65, 200, 255,  35, 191,   5, 107, 199,
    182,  58, 107,  11, 188, 187, 102, 255,
    173,   1,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   1,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    125,  44, 253, 250,  56, 187, 192, 199,
     19,  72, 166, 222, 101, 201, 129, 163,
    149,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   1,   0,   0,   7,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    230,  97,  26,  23, 216,  90, 201, 194,
     31, 216,  29,  41,  25, 185,  30, 161,
    129,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   1,   0,   0,   7,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    210, 199,  69, 253, 107,  76, 250, 128,
    198, 132,   3, 144, 167, 136, 143, 212,
    109,   1,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   1,   0,   0,   7,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
     69, 163, 120,  96, 154,  49, 225, 252,
     90,  20,  42,  27, 143,  41,  49, 137,
     89,   1,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   1,   0,   0,   7,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
     39, 110,  42, 193, 130,  61,  69, 173,
     97, 203, 147,  69, 255, 163, 248, 189,
     69,   1,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   1,   0,   0,   7,   0,   0,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
    180,  66,  59,  26, 248,  86,  76, 255,
     82, 241,  99,  70,  88, 189, 157, 230,
     49,   1,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   1,   0,   0,   7,   0,   0,   0,
     11,   0,   0,   0,   0,   0,   0,   0,
    233, 242, 218,   6,  68, 116, 182, 171,
    196,  94, 254, 112,  77,  93,  56, 135,
     25,   1,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   1,   0,   0,   7,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
    173, 233, 139, 209, 218, 103,  41, 177,
     86, 220,  23, 243, 186, 167,  80, 241,
      5,   1,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   0,   0,   0,   7,   0,   0,   0,
     13,   0,   0,   0,   0,   0,   0,   0,
    213, 243, 162,  79, 126,  46,  71, 168,
    108, 177, 100,  61,  83, 156, 122, 228,
    241,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    233,   0,   0,   0,   7,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
    174, 183,  55,  46, 240,  11,  13, 148,
     29,  23, 113, 189,  94, 177, 107, 247,
    221,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   0,   0,   0,   7,   0,   0,   0,
     15,   0,   0,   0,   0,   0,   0,   0,
    247,  83,  47,  97,  12,   1, 194, 153,
     43, 233,  37, 134,  88, 185,  48, 137,
    197,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    185,   0,   0,   0,   7,   0,   0,   0,
    108, 111,  97, 100,  65, 108,  53,  55,
     56,  97,  57,  52,  55,  50,  48,  49,
     57,  50,  50, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     99, 114, 101,  97, 116, 101,  68, 101,
    102,  97, 117, 108, 116,  83, 117,  98,
    111,  98, 106, 101,  99, 116,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    101, 120, 101,  99, 117, 116, 101,  85,
     98, 101, 114, 103, 114,  97, 112, 104,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  67, 108,  97, 115, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  78,  97, 109, 101,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    103, 101, 116,  79, 117, 116, 101, 114,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    104,  97, 115,  65, 110, 121,  70, 108,
     97, 103, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    104,  97, 115,  65, 108, 108,  70, 108,
     97, 103, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    104,  97, 115,  67, 108,  97, 115, 115,
     70, 108,  97, 103,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    104,  97, 115,  67, 108,  97, 115, 115,
     70, 108,  97, 103,  69, 120,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    105, 115,  65,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    105, 115,  67, 104, 105, 108, 100,  79,
    102,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    105, 115,  78,  97, 116, 105, 118, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 116,  97, 116, 105,  99,  67, 108,
     97, 115, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    108, 111,  97, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_f8804e550c52fd12 = b_f8804e550c52fd12.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f8804e550c52fd12[] = {
  &s_80fa4c6bfd45c7d2,
  &s_8206c9029a423afd,
  &s_87385d4d70fe5ec4,
  &s_8930b9588625e92b,
  &s_8931298f1b2a145a,
  &s_919a273a332ba017,
  &s_940d0bf02e37b7ae,
  &s_99c2010c612f53f7,
  &s_9c95fe92b2ec0197,
  &s_a11eb919291dd81f,
  &s_a21e869bcaaa732a,
  &s_a381c965dea64813,
  &s_a8472e7e4fa2f3d5,
  &s_abb6744406daf2e9,
  &s_ad453d82c12a6e27,
  &s_b12967dad18be9ad,
  &s_b228f6879fb70a90,
  &s_bdf8a3ff4593cb61,
  &s_c221aa35ed8e21d8,
  &s_c2c95ad8171a61e6,
  &s_c76b05bf23ffc841,
  &s_c7c0bb38fafd2c7d,
  &s_d48f88a7900384c6,
  &s_e47a9c533d64b16c,
  &s_e69dbd584663f152,
  &s_e798d2d967dc8579,
  &s_e7ab8fd439cafe9f,
  &s_f150a7baf317dc56,
  &s_f76bb15ebd71171d,
  &s_fce1319a6078a345,
  &s_ff4c56f81a3b42b4,
  &s_ff66bbbc0b6b3ab6,
};
static const uint16_t m_f8804e550c52fd12[] = {1, 2, 14, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 15, 0, 13};
const ::capnp::_::RawSchema s_f8804e550c52fd12 = {
  0xf8804e550c52fd12, b_f8804e550c52fd12.words, 197, d_f8804e550c52fd12, m_f8804e550c52fd12,
  32, 16, nullptr, nullptr, nullptr, { &s_f8804e550c52fd12, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d22cd718f296123b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     59,  18, 150, 242,  24, 215,  44, 210,
     23,   0,   0,   0,   1,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46,  80,
    114, 111, 112, 101, 114, 116, 105, 101,
    115,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d22cd718f296123b = b_d22cd718f296123b.words;
#if !CAPNP_LITE
static const uint16_t m_d22cd718f296123b[] = {0};
static const uint16_t i_d22cd718f296123b[] = {0};
const ::capnp::_::RawSchema s_d22cd718f296123b = {
  0xd22cd718f296123b, b_d22cd718f296123b.words, 34, nullptr, m_d22cd718f296123b,
  0, 1, i_d22cd718f296123b, nullptr, nullptr, { &s_d22cd718f296123b, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_e7ab8fd439cafe9f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    159, 254, 202,  57, 212, 143, 171, 231,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 108,
    111,  97, 100,  65, 108,  53,  55,  56,
     97,  57,  52,  55,  50,  48,  49,  57,
     50,  50, 100,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 110,  78,  97, 109, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7ab8fd439cafe9f = b_e7ab8fd439cafe9f.words;
#if !CAPNP_LITE
static const uint16_t m_e7ab8fd439cafe9f[] = {0};
static const uint16_t i_e7ab8fd439cafe9f[] = {0};
const ::capnp::_::RawSchema s_e7ab8fd439cafe9f = {
  0xe7ab8fd439cafe9f, b_e7ab8fd439cafe9f.words, 35, nullptr, m_e7ab8fd439cafe9f,
  0, 1, i_e7ab8fd439cafe9f, nullptr, nullptr, { &s_e7ab8fd439cafe9f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_919a273a332ba017 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     23, 160,  43,  51,  58,  39, 154, 145,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 108,
    111,  97, 100,  65, 108,  53,  55,  56,
     97,  57,  52,  55,  50,  48,  49,  57,
     50,  50, 100,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_919a273a332ba017 = b_919a273a332ba017.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_919a273a332ba017[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_919a273a332ba017[] = {0};
static const uint16_t i_919a273a332ba017[] = {0};
const ::capnp::_::RawSchema s_919a273a332ba017 = {
  0x919a273a332ba017, b_919a273a332ba017.words, 35, d_919a273a332ba017, m_919a273a332ba017,
  1, 1, i_919a273a332ba017, nullptr, nullptr, { &s_919a273a332ba017, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<95> b_c221aa35ed8e21d8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216,  33, 142, 237,  53, 170,  33, 194,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46,  99,
    114, 101,  97, 116, 101,  68, 101, 102,
     97, 117, 108, 116,  83, 117,  98, 111,
     98, 106, 101,  99, 116,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  49,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  50,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  51,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  52,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c221aa35ed8e21d8 = b_c221aa35ed8e21d8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c221aa35ed8e21d8[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_c221aa35ed8e21d8[] = {0, 1, 2, 3, 4};
static const uint16_t i_c221aa35ed8e21d8[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_c221aa35ed8e21d8 = {
  0xc221aa35ed8e21d8, b_c221aa35ed8e21d8.words, 95, d_c221aa35ed8e21d8, m_c221aa35ed8e21d8,
  1, 5, i_c221aa35ed8e21d8, nullptr, nullptr, { &s_c221aa35ed8e21d8, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_8206c9029a423afd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    253,  58,  66, 154,   2, 201,   6, 130,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46,  99,
    114, 101,  97, 116, 101,  68, 101, 102,
     97, 117, 108, 116,  83, 117,  98, 111,
     98, 106, 101,  99, 116,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8206c9029a423afd = b_8206c9029a423afd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8206c9029a423afd[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_8206c9029a423afd[] = {0};
static const uint16_t i_8206c9029a423afd[] = {0};
const ::capnp::_::RawSchema s_8206c9029a423afd = {
  0x8206c9029a423afd, b_8206c9029a423afd.words, 35, d_8206c9029a423afd, m_8206c9029a423afd,
  1, 1, i_8206c9029a423afd, nullptr, nullptr, { &s_8206c9029a423afd, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<35> b_9c95fe92b2ec0197 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    151,   1, 236, 178, 146, 254, 149, 156,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 122,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 101,
    120, 101,  99, 117, 116, 101,  85,  98,
    101, 114, 103, 114,  97, 112, 104,  36,
     80,  97, 114,  97, 109, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 121,  80, 111, 105,
    110, 116,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c95fe92b2ec0197 = b_9c95fe92b2ec0197.words;
#if !CAPNP_LITE
static const uint16_t m_9c95fe92b2ec0197[] = {0};
static const uint16_t i_9c95fe92b2ec0197[] = {0};
const ::capnp::_::RawSchema s_9c95fe92b2ec0197 = {
  0x9c95fe92b2ec0197, b_9c95fe92b2ec0197.words, 35, nullptr, m_9c95fe92b2ec0197,
  0, 1, i_9c95fe92b2ec0197, nullptr, nullptr, { &s_9c95fe92b2ec0197, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_e798d2d967dc8579 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    121, 133, 220, 103, 217, 210, 152, 231,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 130,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 101,
    120, 101,  99, 117, 116, 101,  85,  98,
    101, 114, 103, 114,  97, 112, 104,  36,
     82, 101, 115, 117, 108, 116, 115,   0, }
};
::capnp::word const* const bp_e798d2d967dc8579 = b_e798d2d967dc8579.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_e798d2d967dc8579 = {
  0xe798d2d967dc8579, b_e798d2d967dc8579.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_e798d2d967dc8579, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b228f6879fb70a90 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144,  10, 183, 159, 135, 246,  40, 178,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 103,
    101, 116,  67, 108,  97, 115, 115,  36,
     80,  97, 114,  97, 109, 115,   0,   0, }
};
::capnp::word const* const bp_b228f6879fb70a90 = b_b228f6879fb70a90.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b228f6879fb70a90 = {
  0xb228f6879fb70a90, b_b228f6879fb70a90.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b228f6879fb70a90, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_a21e869bcaaa732a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     42, 115, 170, 202, 155, 134,  30, 162,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 103,
    101, 116,  67, 108,  97, 115, 115,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 108,  97, 115, 115,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a21e869bcaaa732a = b_a21e869bcaaa732a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a21e869bcaaa732a[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_a21e869bcaaa732a[] = {0};
static const uint16_t i_a21e869bcaaa732a[] = {0};
const ::capnp::_::RawSchema s_a21e869bcaaa732a = {
  0xa21e869bcaaa732a, b_a21e869bcaaa732a.words, 33, d_a21e869bcaaa732a, m_a21e869bcaaa732a,
  1, 1, i_a21e869bcaaa732a, nullptr, nullptr, { &s_a21e869bcaaa732a, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c76b05bf23ffc841 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     65, 200, 255,  35, 191,   5, 107, 199,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 103,
    101, 116,  78,  97, 109, 101,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0, }
};
::capnp::word const* const bp_c76b05bf23ffc841 = b_c76b05bf23ffc841.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c76b05bf23ffc841 = {
  0xc76b05bf23ffc841, b_c76b05bf23ffc841.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c76b05bf23ffc841, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ff66bbbc0b6b3ab6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182,  58, 107,  11, 188, 187, 102, 255,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 103,
    101, 116,  78,  97, 109, 101,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff66bbbc0b6b3ab6 = b_ff66bbbc0b6b3ab6.words;
#if !CAPNP_LITE
static const uint16_t m_ff66bbbc0b6b3ab6[] = {0};
static const uint16_t i_ff66bbbc0b6b3ab6[] = {0};
const ::capnp::_::RawSchema s_ff66bbbc0b6b3ab6 = {
  0xff66bbbc0b6b3ab6, b_ff66bbbc0b6b3ab6.words, 33, nullptr, m_ff66bbbc0b6b3ab6,
  0, 1, i_ff66bbbc0b6b3ab6, nullptr, nullptr, { &s_ff66bbbc0b6b3ab6, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_c7c0bb38fafd2c7d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    125,  44, 253, 250,  56, 187, 192, 199,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 103,
    101, 116,  79, 117, 116, 101, 114,  36,
     80,  97, 114,  97, 109, 115,   0,   0, }
};
::capnp::word const* const bp_c7c0bb38fafd2c7d = b_c7c0bb38fafd2c7d.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_c7c0bb38fafd2c7d = {
  0xc7c0bb38fafd2c7d, b_c7c0bb38fafd2c7d.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_c7c0bb38fafd2c7d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_a381c965dea64813 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19,  72, 166, 222, 101, 201, 129, 163,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 103,
    101, 116,  79, 117, 116, 101, 114,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111, 117, 116, 101, 114,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a381c965dea64813 = b_a381c965dea64813.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a381c965dea64813[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_a381c965dea64813[] = {0};
static const uint16_t i_a381c965dea64813[] = {0};
const ::capnp::_::RawSchema s_a381c965dea64813 = {
  0xa381c965dea64813, b_a381c965dea64813.words, 33, d_a381c965dea64813, m_a381c965dea64813,
  1, 1, i_a381c965dea64813, nullptr, nullptr, { &s_a381c965dea64813, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_c2c95ad8171a61e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230,  97,  26,  23, 216,  90, 201, 194,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  65, 110, 121,  70, 108,  97,
    103, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 108,  97, 103, 115,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c2c95ad8171a61e6 = b_c2c95ad8171a61e6.words;
#if !CAPNP_LITE
static const uint16_t m_c2c95ad8171a61e6[] = {0};
static const uint16_t i_c2c95ad8171a61e6[] = {0};
const ::capnp::_::RawSchema s_c2c95ad8171a61e6 = {
  0xc2c95ad8171a61e6, b_c2c95ad8171a61e6.words, 34, nullptr, m_c2c95ad8171a61e6,
  0, 1, i_c2c95ad8171a61e6, nullptr, nullptr, { &s_c2c95ad8171a61e6, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_a11eb919291dd81f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     31, 216,  29,  41,  25, 185,  30, 161,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  65, 110, 121,  70, 108,  97,
    103, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a11eb919291dd81f = b_a11eb919291dd81f.words;
#if !CAPNP_LITE
static const uint16_t m_a11eb919291dd81f[] = {0};
static const uint16_t i_a11eb919291dd81f[] = {0};
const ::capnp::_::RawSchema s_a11eb919291dd81f = {
  0xa11eb919291dd81f, b_a11eb919291dd81f.words, 34, nullptr, m_a11eb919291dd81f,
  0, 1, i_a11eb919291dd81f, nullptr, nullptr, { &s_a11eb919291dd81f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_80fa4c6bfd45c7d2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    210, 199,  69, 253, 107,  76, 250, 128,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  65, 108, 108,  70, 108,  97,
    103, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 108,  97, 103, 115,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_80fa4c6bfd45c7d2 = b_80fa4c6bfd45c7d2.words;
#if !CAPNP_LITE
static const uint16_t m_80fa4c6bfd45c7d2[] = {0};
static const uint16_t i_80fa4c6bfd45c7d2[] = {0};
const ::capnp::_::RawSchema s_80fa4c6bfd45c7d2 = {
  0x80fa4c6bfd45c7d2, b_80fa4c6bfd45c7d2.words, 34, nullptr, m_80fa4c6bfd45c7d2,
  0, 1, i_80fa4c6bfd45c7d2, nullptr, nullptr, { &s_80fa4c6bfd45c7d2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d48f88a7900384c6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    198, 132,   3, 144, 167, 136, 143, 212,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  65, 108, 108,  70, 108,  97,
    103, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d48f88a7900384c6 = b_d48f88a7900384c6.words;
#if !CAPNP_LITE
static const uint16_t m_d48f88a7900384c6[] = {0};
static const uint16_t i_d48f88a7900384c6[] = {0};
const ::capnp::_::RawSchema s_d48f88a7900384c6 = {
  0xd48f88a7900384c6, b_d48f88a7900384c6.words, 34, nullptr, m_d48f88a7900384c6,
  0, 1, i_d48f88a7900384c6, nullptr, nullptr, { &s_d48f88a7900384c6, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_fce1319a6078a345 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     69, 163, 120,  96, 154,  49, 225, 252,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  67, 108,  97, 115, 115,  70,
    108,  97, 103,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 108,  97, 103,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fce1319a6078a345 = b_fce1319a6078a345.words;
#if !CAPNP_LITE
static const uint16_t m_fce1319a6078a345[] = {0};
static const uint16_t i_fce1319a6078a345[] = {0};
const ::capnp::_::RawSchema s_fce1319a6078a345 = {
  0xfce1319a6078a345, b_fce1319a6078a345.words, 34, nullptr, m_fce1319a6078a345,
  0, 1, i_fce1319a6078a345, nullptr, nullptr, { &s_fce1319a6078a345, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_8931298f1b2a145a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90,  20,  42,  27, 143,  41,  49, 137,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  67, 108,  97, 115, 115,  70,
    108,  97, 103,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8931298f1b2a145a = b_8931298f1b2a145a.words;
#if !CAPNP_LITE
static const uint16_t m_8931298f1b2a145a[] = {0};
static const uint16_t i_8931298f1b2a145a[] = {0};
const ::capnp::_::RawSchema s_8931298f1b2a145a = {
  0x8931298f1b2a145a, b_8931298f1b2a145a.words, 34, nullptr, m_8931298f1b2a145a,
  0, 1, i_8931298f1b2a145a, nullptr, nullptr, { &s_8931298f1b2a145a, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_ad453d82c12a6e27 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     39, 110,  42, 193, 130,  61,  69, 173,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  67, 108,  97, 115, 115,  70,
    108,  97, 103,  69, 120,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    102, 108,  97, 103,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ad453d82c12a6e27 = b_ad453d82c12a6e27.words;
#if !CAPNP_LITE
static const uint16_t m_ad453d82c12a6e27[] = {0};
static const uint16_t i_ad453d82c12a6e27[] = {0};
const ::capnp::_::RawSchema s_ad453d82c12a6e27 = {
  0xad453d82c12a6e27, b_ad453d82c12a6e27.words, 34, nullptr, m_ad453d82c12a6e27,
  0, 1, i_ad453d82c12a6e27, nullptr, nullptr, { &s_ad453d82c12a6e27, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_bdf8a3ff4593cb61 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     97, 203, 147,  69, 255, 163, 248, 189,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 104,
     97, 115,  67, 108,  97, 115, 115,  70,
    108,  97, 103,  69, 120,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bdf8a3ff4593cb61 = b_bdf8a3ff4593cb61.words;
#if !CAPNP_LITE
static const uint16_t m_bdf8a3ff4593cb61[] = {0};
static const uint16_t i_bdf8a3ff4593cb61[] = {0};
const ::capnp::_::RawSchema s_bdf8a3ff4593cb61 = {
  0xbdf8a3ff4593cb61, b_bdf8a3ff4593cb61.words, 34, nullptr, m_bdf8a3ff4593cb61,
  0, 1, i_bdf8a3ff4593cb61, nullptr, nullptr, { &s_bdf8a3ff4593cb61, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ff4c56f81a3b42b4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    180,  66,  59,  26, 248,  86,  76, 255,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 105,
    115,  65,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff4c56f81a3b42b4 = b_ff4c56f81a3b42b4.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ff4c56f81a3b42b4[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_ff4c56f81a3b42b4[] = {0};
static const uint16_t i_ff4c56f81a3b42b4[] = {0};
const ::capnp::_::RawSchema s_ff4c56f81a3b42b4 = {
  0xff4c56f81a3b42b4, b_ff4c56f81a3b42b4.words, 33, d_ff4c56f81a3b42b4, m_ff4c56f81a3b42b4,
  1, 1, i_ff4c56f81a3b42b4, nullptr, nullptr, { &s_ff4c56f81a3b42b4, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_e69dbd584663f152 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     82, 241,  99,  70,  88, 189, 157, 230,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 105,
    115,  65,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e69dbd584663f152 = b_e69dbd584663f152.words;
#if !CAPNP_LITE
static const uint16_t m_e69dbd584663f152[] = {0};
static const uint16_t i_e69dbd584663f152[] = {0};
const ::capnp::_::RawSchema s_e69dbd584663f152 = {
  0xe69dbd584663f152, b_e69dbd584663f152.words, 33, nullptr, m_e69dbd584663f152,
  0, 1, i_e69dbd584663f152, nullptr, nullptr, { &s_e69dbd584663f152, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_abb6744406daf2e9 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    233, 242, 218,   6,  68, 116, 182, 171,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 105,
    115,  67, 104, 105, 108, 100,  79, 102,
     36,  80,  97, 114,  97, 109, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_abb6744406daf2e9 = b_abb6744406daf2e9.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_abb6744406daf2e9[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_abb6744406daf2e9[] = {0};
static const uint16_t i_abb6744406daf2e9[] = {0};
const ::capnp::_::RawSchema s_abb6744406daf2e9 = {
  0xabb6744406daf2e9, b_abb6744406daf2e9.words, 33, d_abb6744406daf2e9, m_abb6744406daf2e9,
  1, 1, i_abb6744406daf2e9, nullptr, nullptr, { &s_abb6744406daf2e9, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_87385d4d70fe5ec4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196,  94, 254, 112,  77,  93,  56, 135,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 105,
    115,  67, 104, 105, 108, 100,  79, 102,
     36,  82, 101, 115, 117, 108, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_87385d4d70fe5ec4 = b_87385d4d70fe5ec4.words;
#if !CAPNP_LITE
static const uint16_t m_87385d4d70fe5ec4[] = {0};
static const uint16_t i_87385d4d70fe5ec4[] = {0};
const ::capnp::_::RawSchema s_87385d4d70fe5ec4 = {
  0x87385d4d70fe5ec4, b_87385d4d70fe5ec4.words, 34, nullptr, m_87385d4d70fe5ec4,
  0, 1, i_87385d4d70fe5ec4, nullptr, nullptr, { &s_87385d4d70fe5ec4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_b12967dad18be9ad = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    173, 233, 139, 209, 218, 103,  41, 177,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 105,
    115,  78,  97, 116, 105, 118, 101,  36,
     80,  97, 114,  97, 109, 115,   0,   0, }
};
::capnp::word const* const bp_b12967dad18be9ad = b_b12967dad18be9ad.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_b12967dad18be9ad = {
  0xb12967dad18be9ad, b_b12967dad18be9ad.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_b12967dad18be9ad, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_f150a7baf317dc56 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     86, 220,  23, 243, 186, 167,  80, 241,
     23,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  66,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 105,
    115,  78,  97, 116, 105, 118, 101,  36,
     82, 101, 115, 117, 108, 116, 115,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115, 117, 108, 116,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f150a7baf317dc56 = b_f150a7baf317dc56.words;
#if !CAPNP_LITE
static const uint16_t m_f150a7baf317dc56[] = {0};
static const uint16_t i_f150a7baf317dc56[] = {0};
const ::capnp::_::RawSchema s_f150a7baf317dc56 = {
  0xf150a7baf317dc56, b_f150a7baf317dc56.words, 33, nullptr, m_f150a7baf317dc56,
  0, 1, i_f150a7baf317dc56, nullptr, nullptr, { &s_f150a7baf317dc56, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_a8472e7e4fa2f3d5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    213, 243, 162,  79, 126,  46,  71, 168,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 115,
    116,  97, 116, 105,  99,  67, 108,  97,
    115, 115,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a8472e7e4fa2f3d5 = b_a8472e7e4fa2f3d5.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_a8472e7e4fa2f3d5 = {
  0xa8472e7e4fa2f3d5, b_a8472e7e4fa2f3d5.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_a8472e7e4fa2f3d5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e47a9c533d64b16c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    108, 177, 100,  61,  83, 156, 122, 228,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  90,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 115,
    116,  97, 116, 105,  99,  67, 108,  97,
    115, 115,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 108,  97, 115, 115,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e47a9c533d64b16c = b_e47a9c533d64b16c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e47a9c533d64b16c[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_e47a9c533d64b16c[] = {0};
static const uint16_t i_e47a9c533d64b16c[] = {0};
const ::capnp::_::RawSchema s_e47a9c533d64b16c = {
  0xe47a9c533d64b16c, b_e47a9c533d64b16c.words, 34, d_e47a9c533d64b16c, m_e47a9c533d64b16c,
  1, 1, i_e47a9c533d64b16c, nullptr, nullptr, { &s_e47a9c533d64b16c, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_940d0bf02e37b7ae = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    174, 183,  55,  46, 240,  11,  13, 148,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 102,
    105, 110, 100,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 105, 103, 105, 110,  73, 110,
     78,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116, 101, 114,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_940d0bf02e37b7ae = b_940d0bf02e37b7ae.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_940d0bf02e37b7ae[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_940d0bf02e37b7ae[] = {0, 1};
static const uint16_t i_940d0bf02e37b7ae[] = {0, 1};
const ::capnp::_::RawSchema s_940d0bf02e37b7ae = {
  0x940d0bf02e37b7ae, b_940d0bf02e37b7ae.words, 49, d_940d0bf02e37b7ae, m_940d0bf02e37b7ae,
  1, 2, i_940d0bf02e37b7ae, nullptr, nullptr, { &s_940d0bf02e37b7ae, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_f76bb15ebd71171d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     29,  23, 113, 189,  94, 177, 107, 247,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 102,
    105, 110, 100,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f76bb15ebd71171d = b_f76bb15ebd71171d.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f76bb15ebd71171d[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_f76bb15ebd71171d[] = {0};
static const uint16_t i_f76bb15ebd71171d[] = {0};
const ::capnp::_::RawSchema s_f76bb15ebd71171d = {
  0xf76bb15ebd71171d, b_f76bb15ebd71171d.words, 33, d_f76bb15ebd71171d, m_f76bb15ebd71171d,
  1, 1, i_f76bb15ebd71171d, nullptr, nullptr, { &s_f76bb15ebd71171d, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_99c2010c612f53f7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    247,  83,  47,  97,  12,   1, 194, 153,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 108,
    111,  97, 100,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 110,  78,  97, 109, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_99c2010c612f53f7 = b_99c2010c612f53f7.words;
#if !CAPNP_LITE
static const uint16_t m_99c2010c612f53f7[] = {0};
static const uint16_t i_99c2010c612f53f7[] = {0};
const ::capnp::_::RawSchema s_99c2010c612f53f7 = {
  0x99c2010c612f53f7, b_99c2010c612f53f7.words, 33, nullptr, m_99c2010c612f53f7,
  0, 1, i_99c2010c612f53f7, nullptr, nullptr, { &s_99c2010c612f53f7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_8930b9588625e92b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     43, 233,  37, 134,  88, 185,  48, 137,
     23,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     79,  98, 106, 101,  99, 116,  46, 108,
    111,  97, 100,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8930b9588625e92b = b_8930b9588625e92b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8930b9588625e92b[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_8930b9588625e92b[] = {0};
static const uint16_t i_8930b9588625e92b[] = {0};
const ::capnp::_::RawSchema s_8930b9588625e92b = {
  0x8930b9588625e92b, b_8930b9588625e92b.words, 33, d_8930b9588625e92b, m_8930b9588625e92b,
  1, 1, i_8930b9588625e92b, nullptr, nullptr, { &s_8930b9588625e92b, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_a6e4ebd308b233ac = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
     16,   0,   0,   0,   3,   0,   0,   0,
     88,  68, 151, 166, 105, 232, 115, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 199,   0,   0,   0,
    149,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    178, 198, 188, 128,  16, 161,   4, 156,
    218, 148,  53,  42,  91, 199, 243, 232,
     81,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     62, 115, 167, 109, 227, 114, 202, 174,
     75, 140,  17, 112, 239, 247, 106, 201,
     61,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
     12, 136,  59, 245,  39,   3,  10, 246,
     66, 142, 183,  84, 193, 123, 218, 183,
     37,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,   7,   0,   0,   0,
    115, 116,  97, 116, 105,  99,  67, 108,
     97, 115, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    108, 111,  97, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_a6e4ebd308b233ac = b_a6e4ebd308b233ac.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_a6e4ebd308b233ac[] = {
  &s_9c04a11080bcc6b2,
  &s_aeca72e36da7733e,
  &s_b7da7bc154b78e42,
  &s_c96af7ef70118c4b,
  &s_e8f3c75b2a3594da,
  &s_f60a0327f53b880c,
};
static const uint16_t m_a6e4ebd308b233ac[] = {1, 2, 0};
const ::capnp::_::RawSchema s_a6e4ebd308b233ac = {
  0xa6e4ebd308b233ac, b_a6e4ebd308b233ac.words, 49, d_a6e4ebd308b233ac, m_a6e4ebd308b233ac,
  6, 3, nullptr, nullptr, nullptr, { &s_a6e4ebd308b233ac, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_9c04a11080bcc6b2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    178, 198, 188, 128,  16, 161,   4, 156,
     22,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,  46, 115, 116,
     97, 116, 105,  99,  67, 108,  97, 115,
    115,  36,  80,  97, 114,  97, 109, 115,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c04a11080bcc6b2 = b_9c04a11080bcc6b2.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9c04a11080bcc6b2 = {
  0x9c04a11080bcc6b2, b_9c04a11080bcc6b2.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9c04a11080bcc6b2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_e8f3c75b2a3594da = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    218, 148,  53,  42,  91, 199, 243, 232,
     22,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  82,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,  46, 115, 116,
     97, 116, 105,  99,  67, 108,  97, 115,
    115,  36,  82, 101, 115, 117, 108, 116,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 108,  97, 115, 115,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e8f3c75b2a3594da = b_e8f3c75b2a3594da.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e8f3c75b2a3594da[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_e8f3c75b2a3594da[] = {0};
static const uint16_t i_e8f3c75b2a3594da[] = {0};
const ::capnp::_::RawSchema s_e8f3c75b2a3594da = {
  0xe8f3c75b2a3594da, b_e8f3c75b2a3594da.words, 34, d_e8f3c75b2a3594da, m_e8f3c75b2a3594da,
  1, 1, i_e8f3c75b2a3594da, nullptr, nullptr, { &s_e8f3c75b2a3594da, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_aeca72e36da7733e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     62, 115, 167, 109, 227, 114, 202, 174,
     22,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,  46, 102, 105,
    110, 100,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 105, 103, 105, 110,  73, 110,
     78,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116, 101, 114,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aeca72e36da7733e = b_aeca72e36da7733e.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aeca72e36da7733e[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_aeca72e36da7733e[] = {0, 1};
static const uint16_t i_aeca72e36da7733e[] = {0, 1};
const ::capnp::_::RawSchema s_aeca72e36da7733e = {
  0xaeca72e36da7733e, b_aeca72e36da7733e.words, 49, d_aeca72e36da7733e, m_aeca72e36da7733e,
  1, 2, i_aeca72e36da7733e, nullptr, nullptr, { &s_aeca72e36da7733e, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c96af7ef70118c4b = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     75, 140,  17, 112, 239, 247, 106, 201,
     22,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,  46, 102, 105,
    110, 100,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c96af7ef70118c4b = b_c96af7ef70118c4b.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_c96af7ef70118c4b[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_c96af7ef70118c4b[] = {0};
static const uint16_t i_c96af7ef70118c4b[] = {0};
const ::capnp::_::RawSchema s_c96af7ef70118c4b = {
  0xc96af7ef70118c4b, b_c96af7ef70118c4b.words, 33, d_c96af7ef70118c4b, m_c96af7ef70118c4b,
  1, 1, i_c96af7ef70118c4b, nullptr, nullptr, { &s_c96af7ef70118c4b, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_f60a0327f53b880c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     12, 136,  59, 245,  39,   3,  10, 246,
     22,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  18,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,  46, 108, 111,
     97, 100,  36,  80,  97, 114,  97, 109,
    115,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 110,  78,  97, 109, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f60a0327f53b880c = b_f60a0327f53b880c.words;
#if !CAPNP_LITE
static const uint16_t m_f60a0327f53b880c[] = {0};
static const uint16_t i_f60a0327f53b880c[] = {0};
const ::capnp::_::RawSchema s_f60a0327f53b880c = {
  0xf60a0327f53b880c, b_f60a0327f53b880c.words, 33, nullptr, m_f60a0327f53b880c,
  0, 1, i_f60a0327f53b880c, nullptr, nullptr, { &s_f60a0327f53b880c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b7da7bc154b78e42 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     66, 142, 183,  84, 193, 123, 218, 183,
     22,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     67, 108,  97, 115, 115,  46, 108, 111,
     97, 100,  36,  82, 101, 115, 117, 108,
    116, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b7da7bc154b78e42 = b_b7da7bc154b78e42.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b7da7bc154b78e42[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_b7da7bc154b78e42[] = {0};
static const uint16_t i_b7da7bc154b78e42[] = {0};
const ::capnp::_::RawSchema s_b7da7bc154b78e42 = {
  0xb7da7bc154b78e42, b_b7da7bc154b78e42.words, 33, d_b7da7bc154b78e42, m_b7da7bc154b78e42,
  1, 1, i_b7da7bc154b78e42, nullptr, nullptr, { &s_b7da7bc154b78e42, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<105> b_8f14345d3c62a5e0 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    224, 165,  98,  60,  93,  52,  20, 143,
     16,   0,   0,   0,   3,   0,   0,   0,
     88,  68, 151, 166, 105, 232, 115, 240,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,   7,   2,   0,   0,
    109,   1,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     32,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     34, 152, 164,  54, 217, 117,  52, 188,
     64, 252, 121, 189,  38,  33, 145, 174,
    241,   0,   0,   0, 234,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    241,   0,   0,   0,   7,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     89, 163, 162, 243, 238,   2, 180, 236,
    143, 123, 115, 250, 178,  75, 169, 178,
    229,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    217,   0,   0,   0,   7,   0,   0,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
    242, 107,  51,  66,  81,   5,  16, 181,
     66,  35, 129,  96, 149, 239, 172, 201,
    205,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   0,   0,   0,   7,   0,   0,   0,
      3,   0,   0,   0,   0,   0,   0,   0,
    182,  97,  60,  19,  15,  96, 140, 181,
     28, 122, 222, 190, 117,  80, 111, 147,
    181,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,   7,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
    116, 184,  29, 244, 234, 159,  96, 132,
    205,  35, 105, 130, 171, 246,  76, 200,
    157,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,   7,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
    196, 190,  86, 188, 241,  81,  92, 159,
     83, 210,  83, 159, 178, 154, 159, 136,
    133,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,   7,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
    199, 128,  34, 223,  22, 180, 112, 170,
     90, 148,  79, 121,  94, 227,  58, 226,
    113,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,   7,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
    161,  71, 149, 222, 161, 177, 155, 195,
     44, 234,  72, 170, 128,  89, 218, 254,
     89,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,   7,   0,   0,   0,
    112, 114, 105, 110, 116, 102,  56,  97,
     56,  55, 100,  98, 102, 101,  51,  48,
    100,  54,  57,  98,  54,  54,  83, 116,
     97, 116, 105,  99,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
     97, 100, 100,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 117,  98,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    109, 117, 108,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    100, 105, 118,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    115, 116,  97, 116, 105,  99,  67, 108,
     97, 115, 115,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    102, 105, 110, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
    108, 111,  97, 100,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8f14345d3c62a5e0 = b_8f14345d3c62a5e0.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_8f14345d3c62a5e0[] = {
  &s_84609feaf41db874,
  &s_889f9ab29f53d253,
  &s_936f5075bede7a1c,
  &s_9f5c51f1bc56bec4,
  &s_aa70b416df2280c7,
  &s_ae912126bd79fc40,
  &s_b2a94bb2fa737b8f,
  &s_b510055142336bf2,
  &s_b58c600f133c61b6,
  &s_bc3475d936a49822,
  &s_c39bb1a1de9547a1,
  &s_c84cf6ab826923cd,
  &s_c9acef9560812342,
  &s_e23ae35e794f945a,
  &s_ecb402eef3a2a359,
  &s_f8804e550c52fd12,
  &s_feda5980aa48ea2c,
};
static const uint16_t m_8f14345d3c62a5e0[] = {1, 4, 6, 7, 3, 0, 5, 2};
const ::capnp::_::RawSchema s_8f14345d3c62a5e0 = {
  0x8f14345d3c62a5e0, b_8f14345d3c62a5e0.words, 105, d_8f14345d3c62a5e0, m_8f14345d3c62a5e0,
  17, 8, nullptr, nullptr, nullptr, { &s_8f14345d3c62a5e0, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<36> b_bc3475d936a49822 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     34, 152, 164,  54, 217, 117,  52, 188,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 112, 114, 105, 110, 116, 102,  56,
     97,  56,  55, 100,  98, 102, 101,  51,
     48, 100,  54,  57,  98,  54,  54,  83,
    116,  97, 116, 105,  99,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bc3475d936a49822 = b_bc3475d936a49822.words;
#if !CAPNP_LITE
static const uint16_t m_bc3475d936a49822[] = {0};
static const uint16_t i_bc3475d936a49822[] = {0};
const ::capnp::_::RawSchema s_bc3475d936a49822 = {
  0xbc3475d936a49822, b_bc3475d936a49822.words, 36, nullptr, m_bc3475d936a49822,
  0, 1, i_bc3475d936a49822, nullptr, nullptr, { &s_bc3475d936a49822, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<20> b_ae912126bd79fc40 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64, 252, 121, 189,  38,  33, 145, 174,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 112, 114, 105, 110, 116, 102,  56,
     97,  56,  55, 100,  98, 102, 101,  51,
     48, 100,  54,  57,  98,  54,  54,  83,
    116,  97, 116, 105,  99,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0, }
};
::capnp::word const* const bp_ae912126bd79fc40 = b_ae912126bd79fc40.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_ae912126bd79fc40 = {
  0xae912126bd79fc40, b_ae912126bd79fc40.words, 20, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_ae912126bd79fc40, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_ecb402eef3a2a359 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     89, 163, 162, 243, 238,   2, 180, 236,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46,  97, 100, 100,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  49,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ecb402eef3a2a359 = b_ecb402eef3a2a359.words;
#if !CAPNP_LITE
static const uint16_t m_ecb402eef3a2a359[] = {0, 1};
static const uint16_t i_ecb402eef3a2a359[] = {0, 1};
const ::capnp::_::RawSchema s_ecb402eef3a2a359 = {
  0xecb402eef3a2a359, b_ecb402eef3a2a359.words, 48, nullptr, m_ecb402eef3a2a359,
  0, 2, i_ecb402eef3a2a359, nullptr, nullptr, { &s_ecb402eef3a2a359, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b2a94bb2fa737b8f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    143, 123, 115, 250, 178,  75, 169, 178,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46,  97, 100, 100,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2a94bb2fa737b8f = b_b2a94bb2fa737b8f.words;
#if !CAPNP_LITE
static const uint16_t m_b2a94bb2fa737b8f[] = {0};
static const uint16_t i_b2a94bb2fa737b8f[] = {0};
const ::capnp::_::RawSchema s_b2a94bb2fa737b8f = {
  0xb2a94bb2fa737b8f, b_b2a94bb2fa737b8f.words, 33, nullptr, m_b2a94bb2fa737b8f,
  0, 1, i_b2a94bb2fa737b8f, nullptr, nullptr, { &s_b2a94bb2fa737b8f, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_b510055142336bf2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    242, 107,  51,  66,  81,   5,  16, 181,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 115, 117,  98,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  49,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b510055142336bf2 = b_b510055142336bf2.words;
#if !CAPNP_LITE
static const uint16_t m_b510055142336bf2[] = {0, 1};
static const uint16_t i_b510055142336bf2[] = {0, 1};
const ::capnp::_::RawSchema s_b510055142336bf2 = {
  0xb510055142336bf2, b_b510055142336bf2.words, 48, nullptr, m_b510055142336bf2,
  0, 2, i_b510055142336bf2, nullptr, nullptr, { &s_b510055142336bf2, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c9acef9560812342 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     66,  35, 129,  96, 149, 239, 172, 201,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 115, 117,  98,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c9acef9560812342 = b_c9acef9560812342.words;
#if !CAPNP_LITE
static const uint16_t m_c9acef9560812342[] = {0};
static const uint16_t i_c9acef9560812342[] = {0};
const ::capnp::_::RawSchema s_c9acef9560812342 = {
  0xc9acef9560812342, b_c9acef9560812342.words, 33, nullptr, m_c9acef9560812342,
  0, 1, i_c9acef9560812342, nullptr, nullptr, { &s_c9acef9560812342, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_b58c600f133c61b6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    182,  97,  60,  19,  15,  96, 140, 181,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 109, 117, 108,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  49,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b58c600f133c61b6 = b_b58c600f133c61b6.words;
#if !CAPNP_LITE
static const uint16_t m_b58c600f133c61b6[] = {0, 1};
static const uint16_t i_b58c600f133c61b6[] = {0, 1};
const ::capnp::_::RawSchema s_b58c600f133c61b6 = {
  0xb58c600f133c61b6, b_b58c600f133c61b6.words, 48, nullptr, m_b58c600f133c61b6,
  0, 2, i_b58c600f133c61b6, nullptr, nullptr, { &s_b58c600f133c61b6, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_936f5075bede7a1c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     28, 122, 222, 190, 117,  80, 111, 147,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 109, 117, 108,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_936f5075bede7a1c = b_936f5075bede7a1c.words;
#if !CAPNP_LITE
static const uint16_t m_936f5075bede7a1c[] = {0};
static const uint16_t i_936f5075bede7a1c[] = {0};
const ::capnp::_::RawSchema s_936f5075bede7a1c = {
  0x936f5075bede7a1c, b_936f5075bede7a1c.words, 33, nullptr, m_936f5075bede7a1c,
  0, 1, i_936f5075bede7a1c, nullptr, nullptr, { &s_936f5075bede7a1c, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_84609feaf41db874 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    116, 184,  29, 244, 234, 159,  96, 132,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 100, 105, 118,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  26,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    112,  48,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112,  49,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_84609feaf41db874 = b_84609feaf41db874.words;
#if !CAPNP_LITE
static const uint16_t m_84609feaf41db874[] = {0, 1};
static const uint16_t i_84609feaf41db874[] = {0, 1};
const ::capnp::_::RawSchema s_84609feaf41db874 = {
  0x84609feaf41db874, b_84609feaf41db874.words, 48, nullptr, m_84609feaf41db874,
  0, 2, i_84609feaf41db874, nullptr, nullptr, { &s_84609feaf41db874, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c84cf6ab826923cd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    205,  35, 105, 130, 171, 246,  76, 200,
     25,   0,   0,   0,   1,   0,   1,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 100, 105, 118,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    114, 101, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c84cf6ab826923cd = b_c84cf6ab826923cd.words;
#if !CAPNP_LITE
static const uint16_t m_c84cf6ab826923cd[] = {0};
static const uint16_t i_c84cf6ab826923cd[] = {0};
const ::capnp::_::RawSchema s_c84cf6ab826923cd = {
  0xc84cf6ab826923cd, b_c84cf6ab826923cd.words, 33, nullptr, m_c84cf6ab826923cd,
  0, 1, i_c84cf6ab826923cd, nullptr, nullptr, { &s_c84cf6ab826923cd, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<18> b_9f5c51f1bc56bec4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    196, 190,  86, 188, 241,  81,  92, 159,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  98,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 115, 116,  97, 116, 105,  99,  67,
    108,  97, 115, 115,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f5c51f1bc56bec4 = b_9f5c51f1bc56bec4.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_9f5c51f1bc56bec4 = {
  0x9f5c51f1bc56bec4, b_9f5c51f1bc56bec4.words, 18, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_9f5c51f1bc56bec4, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_889f9ab29f53d253 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     83, 210,  83, 159, 178, 154, 159, 136,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 115, 116,  97, 116, 105,  99,  67,
    108,  97, 115, 115,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     99, 108,  97, 115, 115,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_889f9ab29f53d253 = b_889f9ab29f53d253.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_889f9ab29f53d253[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_889f9ab29f53d253[] = {0};
static const uint16_t i_889f9ab29f53d253[] = {0};
const ::capnp::_::RawSchema s_889f9ab29f53d253 = {
  0x889f9ab29f53d253, b_889f9ab29f53d253.words, 34, d_889f9ab29f53d253, m_889f9ab29f53d253,
  1, 1, i_889f9ab29f53d253, nullptr, nullptr, { &s_889f9ab29f53d253, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_aa70b416df2280c7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    199, 128,  34, 223,  22, 180, 112, 170,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 102, 105, 110, 100,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    111, 114, 105, 103, 105, 110,  73, 110,
     78,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    111, 117, 116, 101, 114,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     59,  18, 150, 242,  24, 215,  44, 210,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aa70b416df2280c7 = b_aa70b416df2280c7.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_aa70b416df2280c7[] = {
  &s_d22cd718f296123b,
};
static const uint16_t m_aa70b416df2280c7[] = {0, 1};
static const uint16_t i_aa70b416df2280c7[] = {0, 1};
const ::capnp::_::RawSchema s_aa70b416df2280c7 = {
  0xaa70b416df2280c7, b_aa70b416df2280c7.words, 49, d_aa70b416df2280c7, m_aa70b416df2280c7,
  1, 2, i_aa70b416df2280c7, nullptr, nullptr, { &s_aa70b416df2280c7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_e23ae35e794f945a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     90, 148,  79, 121,  94, 227,  58, 226,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 102, 105, 110, 100,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e23ae35e794f945a = b_e23ae35e794f945a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e23ae35e794f945a[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_e23ae35e794f945a[] = {0};
static const uint16_t i_e23ae35e794f945a[] = {0};
const ::capnp::_::RawSchema s_e23ae35e794f945a = {
  0xe23ae35e794f945a, b_e23ae35e794f945a.words, 33, d_e23ae35e794f945a, m_e23ae35e794f945a,
  1, 1, i_e23ae35e794f945a, nullptr, nullptr, { &s_e23ae35e794f945a, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_c39bb1a1de9547a1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161,  71, 149, 222, 161, 177, 155, 195,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 108, 111,  97, 100,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    105, 110,  78,  97, 109, 101,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c39bb1a1de9547a1 = b_c39bb1a1de9547a1.words;
#if !CAPNP_LITE
static const uint16_t m_c39bb1a1de9547a1[] = {0};
static const uint16_t i_c39bb1a1de9547a1[] = {0};
const ::capnp::_::RawSchema s_c39bb1a1de9547a1 = {
  0xc39bb1a1de9547a1, b_c39bb1a1de9547a1.words, 33, nullptr, m_c39bb1a1de9547a1,
  0, 1, i_c39bb1a1de9547a1, nullptr, nullptr, { &s_c39bb1a1de9547a1, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_feda5980aa48ea2c = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     44, 234,  72, 170, 128,  89, 218, 254,
     25,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     77, 121,  79,  98, 106, 101,  99, 116,
     46, 108, 111,  97, 100,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_feda5980aa48ea2c = b_feda5980aa48ea2c.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_feda5980aa48ea2c[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_feda5980aa48ea2c[] = {0};
static const uint16_t i_feda5980aa48ea2c[] = {0};
const ::capnp::_::RawSchema s_feda5980aa48ea2c = {
  0xfeda5980aa48ea2c, b_feda5980aa48ea2c.words, 33, d_feda5980aa48ea2c, m_feda5980aa48ea2c,
  1, 1, i_feda5980aa48ea2c, nullptr, nullptr, { &s_feda5980aa48ea2c, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_8754b8ac41e17d9d = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    157, 125, 225,  65, 172, 184,  84, 135,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
    110, 101, 119,  85,  69,  79,  98, 106,
    101,  99, 116,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
     99, 108,  97, 115, 115,  78,  97, 109,
    101,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_8754b8ac41e17d9d = b_8754b8ac41e17d9d.words;
#if !CAPNP_LITE
static const uint16_t m_8754b8ac41e17d9d[] = {0};
static const uint16_t i_8754b8ac41e17d9d[] = {0};
const ::capnp::_::RawSchema s_8754b8ac41e17d9d = {
  0x8754b8ac41e17d9d, b_8754b8ac41e17d9d.words, 34, nullptr, m_8754b8ac41e17d9d,
  0, 1, i_8754b8ac41e17d9d, nullptr, nullptr, { &s_8754b8ac41e17d9d, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ae118b0c0b204964 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    100,  73,  32,  11,  12, 139,  17, 174,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
    110, 101, 119,  85,  69,  79,  98, 106,
    101,  99, 116,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     31, 169, 175, 202, 191, 189, 246, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ae118b0c0b204964 = b_ae118b0c0b204964.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ae118b0c0b204964[] = {
  &s_9ff6bdbfcaafa91f,
};
static const uint16_t m_ae118b0c0b204964[] = {0};
static const uint16_t i_ae118b0c0b204964[] = {0};
const ::capnp::_::RawSchema s_ae118b0c0b204964 = {
  0xae118b0c0b204964, b_ae118b0c0b204964.words, 33, d_ae118b0c0b204964, m_ae118b0c0b204964,
  1, 1, i_ae118b0c0b204964, nullptr, nullptr, { &s_ae118b0c0b204964, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_fca0806962881895 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    149,  24, 136,  98, 105, 128, 160, 252,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  50,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     99, 114, 101,  97, 116, 101,  77, 121,
     79,  98, 106, 101,  99, 116,  36,  80,
     97, 114,  97, 109, 115,   0,   0,   0, }
};
::capnp::word const* const bp_fca0806962881895 = b_fca0806962881895.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_fca0806962881895 = {
  0xfca0806962881895, b_fca0806962881895.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_fca0806962881895, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_fd68eaf7fe71ba91 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    145, 186, 113, 254, 247, 234, 104, 253,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     99, 114, 101,  97, 116, 101,  77, 121,
     79,  98, 106, 101,  99, 116,  36,  82,
    101, 115, 117, 108, 116, 115,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    224, 165,  98,  60,  93,  52,  20, 143,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fd68eaf7fe71ba91 = b_fd68eaf7fe71ba91.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_fd68eaf7fe71ba91[] = {
  &s_8f14345d3c62a5e0,
};
static const uint16_t m_fd68eaf7fe71ba91[] = {0};
static const uint16_t i_fd68eaf7fe71ba91[] = {0};
const ::capnp::_::RawSchema s_fd68eaf7fe71ba91 = {
  0xfd68eaf7fe71ba91, b_fd68eaf7fe71ba91.words, 33, d_fd68eaf7fe71ba91, m_fd68eaf7fe71ba91,
  1, 1, i_fd68eaf7fe71ba91, nullptr, nullptr, { &s_fd68eaf7fe71ba91, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<17> b_aded6a64526e6735 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 103, 110,  82, 100, 106, 237, 173,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     99, 114, 101,  97, 116, 101,  67, 108,
     97, 115, 115,  36,  80,  97, 114,  97,
    109, 115,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_aded6a64526e6735 = b_aded6a64526e6735.words;
#if !CAPNP_LITE
const ::capnp::_::RawSchema s_aded6a64526e6735 = {
  0xaded6a64526e6735, b_aded6a64526e6735.words, 17, nullptr, nullptr,
  0, 0, nullptr, nullptr, nullptr, { &s_aded6a64526e6735, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_ec7eb24cd3c283cd = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    205, 131, 194, 211,  76, 178, 126, 236,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     99, 114, 101,  97, 116, 101,  67, 108,
     97, 115, 115,  36,  82, 101, 115, 117,
    108, 116, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
    172,  51, 178,   8, 211, 235, 228, 166,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ec7eb24cd3c283cd = b_ec7eb24cd3c283cd.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ec7eb24cd3c283cd[] = {
  &s_a6e4ebd308b233ac,
};
static const uint16_t m_ec7eb24cd3c283cd[] = {0};
static const uint16_t i_ec7eb24cd3c283cd[] = {0};
const ::capnp::_::RawSchema s_ec7eb24cd3c283cd = {
  0xec7eb24cd3c283cd, b_ec7eb24cd3c283cd.words, 33, d_ec7eb24cd3c283cd, m_ec7eb24cd3c283cd,
  1, 1, i_ec7eb24cd3c283cd, nullptr, nullptr, { &s_ec7eb24cd3c283cd, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<33> b_b1d1d3512abb5e88 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    136,  94, 187,  42,  81, 211, 209, 177,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     99, 114, 101,  97, 116, 101,  79,  98,
    106, 101,  99, 116,  36,  80,  97, 114,
     97, 109, 115,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
     97,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b1d1d3512abb5e88 = b_b1d1d3512abb5e88.words;
#if !CAPNP_LITE
static const uint16_t m_b1d1d3512abb5e88[] = {0};
static const uint16_t i_b1d1d3512abb5e88[] = {0};
const ::capnp::_::RawSchema s_b1d1d3512abb5e88 = {
  0xb1d1d3512abb5e88, b_b1d1d3512abb5e88.words, 33, nullptr, m_b1d1d3512abb5e88,
  0, 1, i_b1d1d3512abb5e88, nullptr, nullptr, { &s_b1d1d3512abb5e88, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<48> b_9f084789b85bd526 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     38, 213,  91, 184, 137,  71,   8, 159,
     16,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 101,  46,  99,  97, 112, 110, 112,
     58,  85, 110, 114, 101,  97, 108,  46,
     99, 114, 101,  97, 116, 101,  79,  98,
    106, 101,  99, 116,  36,  82, 101, 115,
    117, 108, 116, 115,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    111,  98, 106, 101,  99, 116,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
     18, 253,  82,  12,  85,  78, 128, 248,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9f084789b85bd526 = b_9f084789b85bd526.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9f084789b85bd526[] = {
  &s_f8804e550c52fd12,
};
static const uint16_t m_9f084789b85bd526[] = {1, 0};
static const uint16_t i_9f084789b85bd526[] = {0, 1};
const ::capnp::_::RawSchema s_9f084789b85bd526 = {
  0x9f084789b85bd526, b_9f084789b85bd526.words, 48, d_9f084789b85bd526, m_9f084789b85bd526,
  1, 2, i_9f084789b85bd526, nullptr, nullptr, { &s_9f084789b85bd526, nullptr, nullptr, 0, 0, nullptr }, true
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


#if !CAPNP_LITE
::capnp::Request< ::Unreal::NewUEObjectParams,  ::Unreal::NewUEObjectResults>
Unreal::Client::newUEObjectRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::NewUEObjectParams,  ::Unreal::NewUEObjectResults>(
      0xf073e869a6974458ull, 0, sizeHint, {true});
}
::kj::Promise<void> Unreal::Server::newUEObject(NewUEObjectContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal", "newUEObject",
      0xf073e869a6974458ull, 0);
}
::capnp::Request< ::Unreal::CreateMyObjectParams,  ::Unreal::CreateMyObjectResults>
Unreal::Client::createMyObjectRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::CreateMyObjectParams,  ::Unreal::CreateMyObjectResults>(
      0xf073e869a6974458ull, 1, sizeHint, {false});
}
::kj::Promise<void> Unreal::Server::createMyObject(CreateMyObjectContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal", "createMyObject",
      0xf073e869a6974458ull, 1);
}
::capnp::Request< ::Unreal::CreateClassParams,  ::Unreal::CreateClassResults>
Unreal::Client::createClassRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::CreateClassParams,  ::Unreal::CreateClassResults>(
      0xf073e869a6974458ull, 2, sizeHint, {false});
}
::kj::Promise<void> Unreal::Server::createClass(CreateClassContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal", "createClass",
      0xf073e869a6974458ull, 2);
}
::capnp::Request< ::Unreal::CreateObjectParams,  ::Unreal::CreateObjectResults>
Unreal::Client::createObjectRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::CreateObjectParams,  ::Unreal::CreateObjectResults>(
      0xf073e869a6974458ull, 3, sizeHint, {false});
}
::kj::Promise<void> Unreal::Server::createObject(CreateObjectContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal", "createObject",
      0xf073e869a6974458ull, 3);
}
::capnp::Capability::Server::DispatchCallResult Unreal::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xf073e869a6974458ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("ue.capnp:Unreal", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Unreal::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        newUEObject(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::NewUEObjectParams,  ::Unreal::NewUEObjectResults>(context)),
        false,
        false
      };
    case 1:
      return {
        createMyObject(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::CreateMyObjectParams,  ::Unreal::CreateMyObjectResults>(context)),
        false,
        false
      };
    case 2:
      return {
        createClass(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::CreateClassParams,  ::Unreal::CreateClassResults>(context)),
        false,
        false
      };
    case 3:
      return {
        createObject(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::CreateObjectParams,  ::Unreal::CreateObjectResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "ue.capnp:Unreal",
          0xf073e869a6974458ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Unreal
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Pointer
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Pointer::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Pointer::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Pointer::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Pointer::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::Unreal::Object::LoadAl578a947201922dParams,  ::Unreal::Object::LoadAl578a947201922dResults>
Unreal::Object::Client::loadAl578a947201922dRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::LoadAl578a947201922dParams,  ::Unreal::Object::LoadAl578a947201922dResults>(
      0xf8804e550c52fd12ull, 0, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::loadAl578a947201922d(LoadAl578a947201922dContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "loadAl578a947201922d",
      0xf8804e550c52fd12ull, 0);
}
::capnp::Request< ::Unreal::Object::CreateDefaultSubobjectParams,  ::Unreal::Object::CreateDefaultSubobjectResults>
Unreal::Object::Client::createDefaultSubobjectRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::CreateDefaultSubobjectParams,  ::Unreal::Object::CreateDefaultSubobjectResults>(
      0xf8804e550c52fd12ull, 1, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::createDefaultSubobject(CreateDefaultSubobjectContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "createDefaultSubobject",
      0xf8804e550c52fd12ull, 1);
}
::capnp::Request< ::Unreal::Object::ExecuteUbergraphParams,  ::Unreal::Object::ExecuteUbergraphResults>
Unreal::Object::Client::executeUbergraphRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::ExecuteUbergraphParams,  ::Unreal::Object::ExecuteUbergraphResults>(
      0xf8804e550c52fd12ull, 2, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::executeUbergraph(ExecuteUbergraphContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "executeUbergraph",
      0xf8804e550c52fd12ull, 2);
}
::capnp::Request< ::Unreal::Object::GetClassParams,  ::Unreal::Object::GetClassResults>
Unreal::Object::Client::getClassRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::GetClassParams,  ::Unreal::Object::GetClassResults>(
      0xf8804e550c52fd12ull, 3, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::getClass(GetClassContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "getClass",
      0xf8804e550c52fd12ull, 3);
}
::capnp::Request< ::Unreal::Object::GetNameParams,  ::Unreal::Object::GetNameResults>
Unreal::Object::Client::getNameRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::GetNameParams,  ::Unreal::Object::GetNameResults>(
      0xf8804e550c52fd12ull, 4, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::getName(GetNameContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "getName",
      0xf8804e550c52fd12ull, 4);
}
::capnp::Request< ::Unreal::Object::GetOuterParams,  ::Unreal::Object::GetOuterResults>
Unreal::Object::Client::getOuterRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::GetOuterParams,  ::Unreal::Object::GetOuterResults>(
      0xf8804e550c52fd12ull, 5, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::getOuter(GetOuterContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "getOuter",
      0xf8804e550c52fd12ull, 5);
}
::capnp::Request< ::Unreal::Object::HasAnyFlagsParams,  ::Unreal::Object::HasAnyFlagsResults>
Unreal::Object::Client::hasAnyFlagsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::HasAnyFlagsParams,  ::Unreal::Object::HasAnyFlagsResults>(
      0xf8804e550c52fd12ull, 6, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::hasAnyFlags(HasAnyFlagsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "hasAnyFlags",
      0xf8804e550c52fd12ull, 6);
}
::capnp::Request< ::Unreal::Object::HasAllFlagsParams,  ::Unreal::Object::HasAllFlagsResults>
Unreal::Object::Client::hasAllFlagsRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::HasAllFlagsParams,  ::Unreal::Object::HasAllFlagsResults>(
      0xf8804e550c52fd12ull, 7, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::hasAllFlags(HasAllFlagsContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "hasAllFlags",
      0xf8804e550c52fd12ull, 7);
}
::capnp::Request< ::Unreal::Object::HasClassFlagParams,  ::Unreal::Object::HasClassFlagResults>
Unreal::Object::Client::hasClassFlagRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::HasClassFlagParams,  ::Unreal::Object::HasClassFlagResults>(
      0xf8804e550c52fd12ull, 8, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::hasClassFlag(HasClassFlagContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "hasClassFlag",
      0xf8804e550c52fd12ull, 8);
}
::capnp::Request< ::Unreal::Object::HasClassFlagExParams,  ::Unreal::Object::HasClassFlagExResults>
Unreal::Object::Client::hasClassFlagExRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::HasClassFlagExParams,  ::Unreal::Object::HasClassFlagExResults>(
      0xf8804e550c52fd12ull, 9, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::hasClassFlagEx(HasClassFlagExContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "hasClassFlagEx",
      0xf8804e550c52fd12ull, 9);
}
::capnp::Request< ::Unreal::Object::IsAParams,  ::Unreal::Object::IsAResults>
Unreal::Object::Client::isARequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::IsAParams,  ::Unreal::Object::IsAResults>(
      0xf8804e550c52fd12ull, 10, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::isA(IsAContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "isA",
      0xf8804e550c52fd12ull, 10);
}
::capnp::Request< ::Unreal::Object::IsChildOfParams,  ::Unreal::Object::IsChildOfResults>
Unreal::Object::Client::isChildOfRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::IsChildOfParams,  ::Unreal::Object::IsChildOfResults>(
      0xf8804e550c52fd12ull, 11, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::isChildOf(IsChildOfContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "isChildOf",
      0xf8804e550c52fd12ull, 11);
}
::capnp::Request< ::Unreal::Object::IsNativeParams,  ::Unreal::Object::IsNativeResults>
Unreal::Object::Client::isNativeRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::IsNativeParams,  ::Unreal::Object::IsNativeResults>(
      0xf8804e550c52fd12ull, 12, sizeHint, {true});
}
::kj::Promise<void> Unreal::Object::Server::isNative(IsNativeContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "isNative",
      0xf8804e550c52fd12ull, 12);
}
::capnp::Request< ::Unreal::Object::StaticClassParams,  ::Unreal::Object::StaticClassResults>
Unreal::Object::Client::staticClassRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::StaticClassParams,  ::Unreal::Object::StaticClassResults>(
      0xf8804e550c52fd12ull, 13, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::staticClass(StaticClassContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "staticClass",
      0xf8804e550c52fd12ull, 13);
}
::capnp::Request< ::Unreal::Object::FindParams,  ::Unreal::Object::FindResults>
Unreal::Object::Client::findRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::FindParams,  ::Unreal::Object::FindResults>(
      0xf8804e550c52fd12ull, 14, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::find(FindContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "find",
      0xf8804e550c52fd12ull, 14);
}
::capnp::Request< ::Unreal::Object::LoadParams,  ::Unreal::Object::LoadResults>
Unreal::Object::Client::loadRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Object::LoadParams,  ::Unreal::Object::LoadResults>(
      0xf8804e550c52fd12ull, 15, sizeHint, {false});
}
::kj::Promise<void> Unreal::Object::Server::load(LoadContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Object", "load",
      0xf8804e550c52fd12ull, 15);
}
::capnp::Capability::Server::DispatchCallResult Unreal::Object::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xf8804e550c52fd12ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("ue.capnp:Unreal.Object", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Unreal::Object::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        loadAl578a947201922d(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::LoadAl578a947201922dParams,  ::Unreal::Object::LoadAl578a947201922dResults>(context)),
        false,
        false
      };
    case 1:
      return {
        createDefaultSubobject(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::CreateDefaultSubobjectParams,  ::Unreal::Object::CreateDefaultSubobjectResults>(context)),
        false,
        false
      };
    case 2:
      return {
        executeUbergraph(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::ExecuteUbergraphParams,  ::Unreal::Object::ExecuteUbergraphResults>(context)),
        false,
        false
      };
    case 3:
      return {
        getClass(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::GetClassParams,  ::Unreal::Object::GetClassResults>(context)),
        false,
        false
      };
    case 4:
      return {
        getName(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::GetNameParams,  ::Unreal::Object::GetNameResults>(context)),
        false,
        false
      };
    case 5:
      return {
        getOuter(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::GetOuterParams,  ::Unreal::Object::GetOuterResults>(context)),
        false,
        false
      };
    case 6:
      return {
        hasAnyFlags(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::HasAnyFlagsParams,  ::Unreal::Object::HasAnyFlagsResults>(context)),
        false,
        false
      };
    case 7:
      return {
        hasAllFlags(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::HasAllFlagsParams,  ::Unreal::Object::HasAllFlagsResults>(context)),
        false,
        false
      };
    case 8:
      return {
        hasClassFlag(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::HasClassFlagParams,  ::Unreal::Object::HasClassFlagResults>(context)),
        false,
        false
      };
    case 9:
      return {
        hasClassFlagEx(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::HasClassFlagExParams,  ::Unreal::Object::HasClassFlagExResults>(context)),
        false,
        false
      };
    case 10:
      return {
        isA(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::IsAParams,  ::Unreal::Object::IsAResults>(context)),
        false,
        false
      };
    case 11:
      return {
        isChildOf(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::IsChildOfParams,  ::Unreal::Object::IsChildOfResults>(context)),
        false,
        false
      };
    case 12:
      return {
        isNative(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::IsNativeParams,  ::Unreal::Object::IsNativeResults>(context)),
        false,
        false
      };
    case 13:
      return {
        staticClass(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::StaticClassParams,  ::Unreal::Object::StaticClassResults>(context)),
        false,
        false
      };
    case 14:
      return {
        find(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::FindParams,  ::Unreal::Object::FindResults>(context)),
        false,
        false
      };
    case 15:
      return {
        load(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Object::LoadParams,  ::Unreal::Object::LoadResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "ue.capnp:Unreal.Object",
          0xf8804e550c52fd12ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Unreal::Object
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::Properties
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::Properties::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::Properties::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::Properties::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::Properties::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::LoadAl578a947201922dParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::LoadAl578a947201922dParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::LoadAl578a947201922dParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::LoadAl578a947201922dParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::LoadAl578a947201922dParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::LoadAl578a947201922dResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::LoadAl578a947201922dResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::LoadAl578a947201922dResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::LoadAl578a947201922dResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::LoadAl578a947201922dResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::CreateDefaultSubobjectParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::CreateDefaultSubobjectParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::CreateDefaultSubobjectParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::CreateDefaultSubobjectParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::CreateDefaultSubobjectParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::CreateDefaultSubobjectResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::CreateDefaultSubobjectResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::CreateDefaultSubobjectResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::CreateDefaultSubobjectResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::CreateDefaultSubobjectResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::ExecuteUbergraphParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::ExecuteUbergraphParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::ExecuteUbergraphParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::ExecuteUbergraphParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::ExecuteUbergraphParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::ExecuteUbergraphResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::ExecuteUbergraphResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::ExecuteUbergraphResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::ExecuteUbergraphResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::ExecuteUbergraphResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::GetClassParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::GetClassParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::GetClassParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::GetClassParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::GetClassParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::GetClassResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::GetClassResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::GetClassResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::GetClassResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::GetClassResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::GetNameParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::GetNameParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::GetNameParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::GetNameParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::GetNameParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::GetNameResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::GetNameResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::GetNameResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::GetNameResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::GetNameResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::GetOuterParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::GetOuterParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::GetOuterParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::GetOuterParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::GetOuterParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::GetOuterResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::GetOuterResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::GetOuterResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::GetOuterResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::GetOuterResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasAnyFlagsParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasAnyFlagsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasAnyFlagsParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasAnyFlagsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasAnyFlagsParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasAnyFlagsResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasAnyFlagsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasAnyFlagsResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasAnyFlagsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasAnyFlagsResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasAllFlagsParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasAllFlagsParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasAllFlagsParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasAllFlagsParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasAllFlagsParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasAllFlagsResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasAllFlagsResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasAllFlagsResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasAllFlagsResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasAllFlagsResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasClassFlagParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasClassFlagParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasClassFlagParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasClassFlagParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasClassFlagParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasClassFlagResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasClassFlagResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasClassFlagResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasClassFlagResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasClassFlagResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasClassFlagExParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasClassFlagExParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasClassFlagExParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasClassFlagExParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasClassFlagExParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::HasClassFlagExResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::HasClassFlagExResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::HasClassFlagExResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::HasClassFlagExResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::HasClassFlagExResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::IsAParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::IsAParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::IsAParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::IsAParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::IsAParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::IsAResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::IsAResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::IsAResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::IsAResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::IsAResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::IsChildOfParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::IsChildOfParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::IsChildOfParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::IsChildOfParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::IsChildOfParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::IsChildOfResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::IsChildOfResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::IsChildOfResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::IsChildOfResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::IsChildOfResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::IsNativeParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::IsNativeParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::IsNativeParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::IsNativeParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::IsNativeParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::IsNativeResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::IsNativeResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::IsNativeResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::IsNativeResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::IsNativeResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::StaticClassParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::StaticClassParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::StaticClassParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::StaticClassParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::StaticClassParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::StaticClassResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::StaticClassResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::StaticClassResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::StaticClassResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::StaticClassResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::FindParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::FindParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::FindParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::FindParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::FindParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::FindResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::FindResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::FindResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::FindResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::FindResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::LoadParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::LoadParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::LoadParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::LoadParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::LoadParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Object::LoadResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Object::LoadResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Object::LoadResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Object::LoadResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Object::LoadResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::Unreal::Class::StaticClassParams,  ::Unreal::Class::StaticClassResults>
Unreal::Class::Client::staticClassRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Class::StaticClassParams,  ::Unreal::Class::StaticClassResults>(
      0xa6e4ebd308b233acull, 0, sizeHint, {false});
}
::kj::Promise<void> Unreal::Class::Server::staticClass(StaticClassContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Class", "staticClass",
      0xa6e4ebd308b233acull, 0);
}
::capnp::Request< ::Unreal::Class::FindParams,  ::Unreal::Class::FindResults>
Unreal::Class::Client::findRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Class::FindParams,  ::Unreal::Class::FindResults>(
      0xa6e4ebd308b233acull, 1, sizeHint, {false});
}
::kj::Promise<void> Unreal::Class::Server::find(FindContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Class", "find",
      0xa6e4ebd308b233acull, 1);
}
::capnp::Request< ::Unreal::Class::LoadParams,  ::Unreal::Class::LoadResults>
Unreal::Class::Client::loadRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::Class::LoadParams,  ::Unreal::Class::LoadResults>(
      0xa6e4ebd308b233acull, 2, sizeHint, {false});
}
::kj::Promise<void> Unreal::Class::Server::load(LoadContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.Class", "load",
      0xa6e4ebd308b233acull, 2);
}
::capnp::Capability::Server::DispatchCallResult Unreal::Class::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xa6e4ebd308b233acull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("ue.capnp:Unreal.Class", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Unreal::Class::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        staticClass(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Class::StaticClassParams,  ::Unreal::Class::StaticClassResults>(context)),
        false,
        false
      };
    case 1:
      return {
        find(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Class::FindParams,  ::Unreal::Class::FindResults>(context)),
        false,
        false
      };
    case 2:
      return {
        load(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::Class::LoadParams,  ::Unreal::Class::LoadResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "ue.capnp:Unreal.Class",
          0xa6e4ebd308b233acull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Unreal::Class
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Class::StaticClassParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Class::StaticClassParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Class::StaticClassParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::StaticClassParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::StaticClassParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Class::StaticClassResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Class::StaticClassResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Class::StaticClassResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::StaticClassResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::StaticClassResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Class::FindParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Class::FindParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Class::FindParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::FindParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::FindParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Class::FindResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Class::FindResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Class::FindResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::FindResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::FindResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Class::LoadParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Class::LoadParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Class::LoadParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::LoadParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::LoadParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::Class::LoadResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::Class::LoadResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::Class::LoadResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::Class::LoadResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::Class::LoadResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

#if !CAPNP_LITE
::capnp::Request< ::Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams,  ::Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults>
Unreal::MyObject::Client::printf8a87dbfe30d69b66StaticRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams,  ::Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults>(
      0x8f14345d3c62a5e0ull, 0, sizeHint, {true});
}
::kj::Promise<void> Unreal::MyObject::Server::printf8a87dbfe30d69b66Static(Printf8a87dbfe30d69b66StaticContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "printf8a87dbfe30d69b66Static",
      0x8f14345d3c62a5e0ull, 0);
}
::capnp::Request< ::Unreal::MyObject::AddParams,  ::Unreal::MyObject::AddResults>
Unreal::MyObject::Client::addRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::AddParams,  ::Unreal::MyObject::AddResults>(
      0x8f14345d3c62a5e0ull, 1, sizeHint, {true});
}
::kj::Promise<void> Unreal::MyObject::Server::add(AddContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "add",
      0x8f14345d3c62a5e0ull, 1);
}
::capnp::Request< ::Unreal::MyObject::SubParams,  ::Unreal::MyObject::SubResults>
Unreal::MyObject::Client::subRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::SubParams,  ::Unreal::MyObject::SubResults>(
      0x8f14345d3c62a5e0ull, 2, sizeHint, {true});
}
::kj::Promise<void> Unreal::MyObject::Server::sub(SubContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "sub",
      0x8f14345d3c62a5e0ull, 2);
}
::capnp::Request< ::Unreal::MyObject::MulParams,  ::Unreal::MyObject::MulResults>
Unreal::MyObject::Client::mulRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::MulParams,  ::Unreal::MyObject::MulResults>(
      0x8f14345d3c62a5e0ull, 3, sizeHint, {true});
}
::kj::Promise<void> Unreal::MyObject::Server::mul(MulContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "mul",
      0x8f14345d3c62a5e0ull, 3);
}
::capnp::Request< ::Unreal::MyObject::DivParams,  ::Unreal::MyObject::DivResults>
Unreal::MyObject::Client::divRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::DivParams,  ::Unreal::MyObject::DivResults>(
      0x8f14345d3c62a5e0ull, 4, sizeHint, {true});
}
::kj::Promise<void> Unreal::MyObject::Server::div(DivContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "div",
      0x8f14345d3c62a5e0ull, 4);
}
::capnp::Request< ::Unreal::MyObject::StaticClassParams,  ::Unreal::MyObject::StaticClassResults>
Unreal::MyObject::Client::staticClassRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::StaticClassParams,  ::Unreal::MyObject::StaticClassResults>(
      0x8f14345d3c62a5e0ull, 5, sizeHint, {false});
}
::kj::Promise<void> Unreal::MyObject::Server::staticClass(StaticClassContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "staticClass",
      0x8f14345d3c62a5e0ull, 5);
}
::capnp::Request< ::Unreal::MyObject::FindParams,  ::Unreal::MyObject::FindResults>
Unreal::MyObject::Client::findRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::FindParams,  ::Unreal::MyObject::FindResults>(
      0x8f14345d3c62a5e0ull, 6, sizeHint, {false});
}
::kj::Promise<void> Unreal::MyObject::Server::find(FindContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "find",
      0x8f14345d3c62a5e0ull, 6);
}
::capnp::Request< ::Unreal::MyObject::LoadParams,  ::Unreal::MyObject::LoadResults>
Unreal::MyObject::Client::loadRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Unreal::MyObject::LoadParams,  ::Unreal::MyObject::LoadResults>(
      0x8f14345d3c62a5e0ull, 7, sizeHint, {false});
}
::kj::Promise<void> Unreal::MyObject::Server::load(LoadContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "ue.capnp:Unreal.MyObject", "load",
      0x8f14345d3c62a5e0ull, 7);
}
::capnp::Capability::Server::DispatchCallResult Unreal::MyObject::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0x8f14345d3c62a5e0ull:
      return dispatchCallInternal(methodId, context);
    case 0xf8804e550c52fd12ull:
      return  ::Unreal::Object::Server::dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("ue.capnp:Unreal.MyObject", interfaceId);
  }
}
::capnp::Capability::Server::DispatchCallResult Unreal::MyObject::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return {
        printf8a87dbfe30d69b66Static(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams,  ::Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults>(context)),
        false,
        false
      };
    case 1:
      return {
        add(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::AddParams,  ::Unreal::MyObject::AddResults>(context)),
        false,
        false
      };
    case 2:
      return {
        sub(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::SubParams,  ::Unreal::MyObject::SubResults>(context)),
        false,
        false
      };
    case 3:
      return {
        mul(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::MulParams,  ::Unreal::MyObject::MulResults>(context)),
        false,
        false
      };
    case 4:
      return {
        div(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::DivParams,  ::Unreal::MyObject::DivResults>(context)),
        false,
        false
      };
    case 5:
      return {
        staticClass(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::StaticClassParams,  ::Unreal::MyObject::StaticClassResults>(context)),
        false,
        false
      };
    case 6:
      return {
        find(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::FindParams,  ::Unreal::MyObject::FindResults>(context)),
        false,
        false
      };
    case 7:
      return {
        load(::capnp::Capability::Server::internalGetTypedContext<
             ::Unreal::MyObject::LoadParams,  ::Unreal::MyObject::LoadResults>(context)),
        false,
        false
      };
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "ue.capnp:Unreal.MyObject",
          0x8f14345d3c62a5e0ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Unreal::MyObject
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::Printf8a87dbfe30d69b66StaticParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::Printf8a87dbfe30d69b66StaticResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::AddParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::AddParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::AddParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::AddParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::AddParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::AddResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::AddResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::AddResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::AddResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::AddResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::SubParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::SubParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::SubParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::SubParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::SubParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::SubResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::SubResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::SubResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::SubResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::SubResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::MulParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::MulParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::MulParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::MulParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::MulParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::MulResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::MulResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::MulResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::MulResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::MulResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::DivParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::DivParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::DivParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::DivParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::DivParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::DivResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::DivResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::DivResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::DivResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::DivResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::StaticClassParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::StaticClassParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::StaticClassParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::StaticClassParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::StaticClassParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::StaticClassResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::StaticClassResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::StaticClassResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::StaticClassResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::StaticClassResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::FindParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::FindParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::FindParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::FindParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::FindParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::FindResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::FindResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::FindResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::FindResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::FindResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::LoadParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::LoadParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::LoadParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::LoadParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::LoadParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::MyObject::LoadResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::MyObject::LoadResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::MyObject::LoadResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::MyObject::LoadResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::MyObject::LoadResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::NewUEObjectParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::NewUEObjectParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::NewUEObjectParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::NewUEObjectParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::NewUEObjectParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::NewUEObjectResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::NewUEObjectResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::NewUEObjectResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::NewUEObjectResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::NewUEObjectResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::CreateMyObjectParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::CreateMyObjectParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::CreateMyObjectParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::CreateMyObjectParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::CreateMyObjectParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::CreateMyObjectResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::CreateMyObjectResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::CreateMyObjectResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::CreateMyObjectResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::CreateMyObjectResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::CreateClassParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::CreateClassParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::CreateClassParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::CreateClassParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::CreateClassParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::CreateClassResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::CreateClassResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::CreateClassResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::CreateClassResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::CreateClassResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::CreateObjectParams
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::CreateObjectParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::CreateObjectParams::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::CreateObjectParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::CreateObjectParams::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Unreal::CreateObjectResults
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Unreal::CreateObjectResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Unreal::CreateObjectResults::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Unreal::CreateObjectResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Unreal::CreateObjectResults::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



